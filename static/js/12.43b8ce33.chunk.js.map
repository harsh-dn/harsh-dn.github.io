{"version":3,"sources":["components/Stats/TableRow.js","components/Stats/Table.js","data/stats/personal.js","components/Stats/Personal.js","data/stats/site.js","components/Stats/Site.js","pages/Stats.js"],"names":["TableRow","label","link","value","format","width","href","defaultProps","x","Table","data","map","pair","Age","useState","age","setAge","useEffect","timer","setInterval","birthTime","Date","now","toFixed","tick","clearInterval","key","PersonalStats","dayjs","Stats","initialData","setResponseData","fetchData","useCallback","a","fetch","res","json","resData","field","Object","keys","includes","Main","title","description","className","id","data-testid","to","Personal","Site"],"mappings":"yKAGMA,EAAW,SAAC,GAAD,IACfC,EADe,EACfA,MAAOC,EADQ,EACRA,KAAMC,EADE,EACFA,MAAOC,EADL,EACKA,OADL,OAGf,+BACE,oBAAIC,MAAM,MAAV,SAAiBJ,IACjB,6BAAKC,EAAO,mBAAGI,KAAMJ,EAAT,SAAgBE,EAAOD,KAAcC,EAAOD,SAe5DH,EAASO,aAAe,CACtBH,OAAQ,SAACI,GAAD,OAAOA,GACfN,KAAM,KACNC,MAAO,MAGMH,QCKAS,EA7BD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACZ,gCACE,gCACGA,EAAKC,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CACER,OAAQQ,EAAKR,OAEbH,MAAOW,EAAKX,MACZC,KAAMU,EAAKV,KACXC,MAAOS,EAAKT,OAHPS,EAAKX,e,QCTdY,EAAM,WAAO,IAAD,EACMC,qBADN,mBACTC,EADS,KACJC,EADI,KAehB,OANAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,kBAPf,WACX,IACMC,EAAY,IAAIC,KAAK,uBAC3BL,IAASK,KAAKC,MAAQF,GAFN,oBAE4BG,QAAQ,KAIpBC,KAAQ,IACxC,OAAO,WACLC,cAAcP,MAEf,IACI,mCAAGH,KAuBGL,EApBF,CACX,CACEgB,IAAK,MACLzB,MAAO,cACPE,MAAO,cAAC,EAAD,KAET,CACEuB,IAAK,SACLzB,MAAO,iBACPE,MAAO,GACPD,KACE,4FAEJ,CACEwB,IAAK,WACLzB,MAAO,eACPE,MAAO,SCzBIwB,EAPO,kBACpB,qCACE,qDACA,cAAC,EAAD,CAAOjB,KAAMA,Q,oDC4CFA,EA7CF,CACX,CACET,MAAO,sCACPyB,IAAK,mBACLxB,KAAM,wDAER,CACED,MAAO,4CACPyB,IAAK,oBACLxB,KAAM,wDAER,CACED,MAAO,kBACPyB,IAAK,QACLxB,KAAM,qDAER,CACED,MAAO,mBACPE,MAAO,KAET,CACEF,MAAO,4BACPE,MAAO,KAET,CACEF,MAAO,qBACPyB,IAAK,oBACLxB,KAAM,oDAER,CACED,MAAO,kBACPyB,IAAK,YACLxB,KAAM,oDACNE,OAAQ,SAACI,GAAD,OAAOoB,IAAMpB,GAAGJ,OAAO,mBAEjC,CAIEH,MAAO,4CACPE,MAAO,OACPD,KAAM,kECVK2B,EAhCD,WAAO,IAAD,EACcf,mBAASgB,GADvB,mBACXpB,EADW,KACLqB,EADK,KAGZC,EAAYC,sBAAW,sBAAC,8BAAAC,EAAA,sEAEVC,MAChB,uDAH0B,cAEtBC,EAFsB,gBAKNA,EAAIC,OALE,OAKtBC,EALsB,OAM5BP,EACED,EAAYnB,KAAI,SAAC4B,GAAD,mBAAC,eACZA,GADW,IAGdpC,MAAOqC,OAAOC,KAAKH,GAASI,SAASH,EAAMb,KACvCY,EAAQC,EAAMb,KACda,EAAMpC,YAZc,2CAe3B,IAMH,OAJAc,qBAAU,WACRe,MACC,CAACA,IAGF,gCACE,4DACA,cAAC,EAAD,CAAOtB,KAAMA,QCPJmB,UAjBD,kBACZ,cAACc,EAAA,EAAD,CACEC,MAAM,QACNC,YAAY,oDAFd,SAIE,0BAASC,UAAU,OAAOC,GAAG,QAA7B,UACE,iCACE,qBAAKD,UAAU,QAAf,SACE,oBAAIE,cAAY,UAAhB,SAA0B,cAAC,IAAD,CAAMC,GAAG,SAAT,yBAG9B,cAACC,EAAD,IACA,cAACC,EAAD","file":"static/js/12.43b8ce33.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableRow = ({\r\n  label, link, value, format,\r\n}) => (\r\n  <tr>\r\n    <td width=\"70%\">{label}</td>\r\n    <td>{link ? <a href={link}>{format(value)}</a> : format(value)}</td>\r\n  </tr>\r\n);\r\n\r\nTableRow.propTypes = {\r\n  format: PropTypes.func,\r\n  label: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.element,\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n};\r\n\r\nTableRow.defaultProps = {\r\n  format: (x) => x,\r\n  link: null,\r\n  value: null,\r\n};\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TableRow from './TableRow';\r\n\r\nconst Table = ({ data }) => (\r\n  <table>\r\n    <tbody>\r\n      {data.map((pair) => (\r\n        <TableRow\r\n          format={pair.format}\r\n          key={pair.label}\r\n          label={pair.label}\r\n          link={pair.link}\r\n          value={pair.value}\r\n        />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTable.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    format: PropTypes.func,\r\n    label: PropTypes.string.isRequired,\r\n    link: PropTypes.string,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.element,\r\n      PropTypes.number,\r\n      PropTypes.string,\r\n    ]),\r\n  })).isRequired,\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Age = () => {\r\n  const [age, setAge] = useState();\r\n\r\n  const tick = () => {\r\n    const divisor = 1000 * 60 * 60 * 24 * 365.2421897; // ms in an average year\r\n    const birthTime = new Date('1999-12-29T08:20:00');\r\n    setAge(((Date.now() - birthTime) / divisor).toFixed(11));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => tick(), 25);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return <>{age}</>;\r\n};\r\n\r\nconst data = [\r\n  {\r\n    key: 'age',\r\n    label: 'Current age',\r\n    value: <Age />,\r\n  },\r\n  {\r\n    key: 'cities',\r\n    label: 'Cities visited',\r\n    value: 30,\r\n    link:\r\n      'https://www.google.com/maps/d/u/0/edit?mid=1jfNIq2pjiJUoFvVS7aqZ7NyK1yLddb2X&usp=sharing',\r\n  },\r\n  {\r\n    key: 'location',\r\n    label: 'Current city',\r\n    value: 'Gaya',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React from 'react';\r\nimport Table from './Table';\r\nimport data from '../../data/stats/personal';\r\n\r\nconst PersonalStats = () => (\r\n  <>\r\n    <h3>Some stats about me</h3>\r\n    <Table data={data} />\r\n  </>\r\n);\r\n\r\nexport default PersonalStats;\r\n","import dayjs from 'dayjs';\r\n\r\n/* Keys match keys returned by the github api. Fields without keys are\r\n * mostly jokes. To see everything returned by the github api, run:\r\n curl https://api.github.com/repos/harsh-dn/personal-site\r\n */\r\nconst data = [\r\n  {\r\n    label: 'Stars this repository has on github',\r\n    key: 'stargazers_count',\r\n    link: 'https://github.com/harsh-dn/personal-site/stargazers',\r\n  },\r\n  {\r\n    label: 'Number of people watching this repository',\r\n    key: 'subscribers_count',\r\n    link: 'https://github.com/harsh-dn/personal-site/stargazers',\r\n  },\r\n  {\r\n    label: 'Number of forks',\r\n    key: 'forks',\r\n    link: 'https://github.com/harsh-dn/personal-site/network',\r\n  },\r\n  {\r\n    label: 'Number of spoons',\r\n    value: '0',\r\n  },\r\n  {\r\n    label: 'Number of linter warnings',\r\n    value: '0', // enforced via github workflow\r\n  },\r\n  {\r\n    label: 'Open github issues',\r\n    key: 'open_issues_count',\r\n    link: 'https://github.com/harsh-dn/personal-site/issues',\r\n  },\r\n  {\r\n    label: 'Last updated at',\r\n    key: 'pushed_at',\r\n    link: 'https://github.com/harsh-dn/personal-site/commits',\r\n    format: (x) => dayjs(x).format('MMMM DD, YYYY'),\r\n  },\r\n  {\r\n    // TODO update this with a pre-commit hook\r\n    /* find . | grep \".js\" | grep -vE \".min.js|node_modules|.git|.json\" |\r\n    xargs -I file cat file | wc -l */\r\n    label: 'Lines of Javascript powering this website',\r\n    value: '2115',\r\n    link: 'https://github.com/harsh-dn/personal-site/graphs/contributors',\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\n\r\nimport Table from './Table';\r\nimport initialData from '../../data/stats/site';\r\n\r\nconst Stats = () => {\r\n  const [data, setResponseData] = useState(initialData);\r\n  // TODO think about persisting this somewhere\r\n  const fetchData = useCallback(async () => {\r\n    // request must be authenticated if private\r\n    const res = await fetch(\r\n      'https://api.github.com/repos/harsh-dn/personal-site',\r\n    );\r\n    const resData = await res.json();\r\n    setResponseData(\r\n      initialData.map((field) => ({\r\n        ...field,\r\n        // update value if value was returned by call to github\r\n        value: Object.keys(resData).includes(field.key)\r\n          ? resData[field.key]\r\n          : field.value,\r\n      })),\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Some stats about this site</h3>\r\n      <Table data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Main from '../layouts/Main';\r\n\r\nimport Personal from '../components/Stats/Personal';\r\nimport Site from '../components/Stats/Site';\r\n\r\nconst Stats = () => (\r\n  <Main\r\n    title=\"Stats\"\r\n    description=\"Some statistics about Harsh Vardhan and harsh.com\"\r\n  >\r\n    <article className=\"post\" id=\"stats\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <h2 data-testid=\"heading\"><Link to=\"/stats\">Stats</Link></h2>\r\n        </div>\r\n      </header>\r\n      <Personal />\r\n      <Site />\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Stats;\r\n"],"sourceRoot":""}